openapi: 3.0.3
info:
  title: Promotions Digital Enablement API
  description: Promotions Digital Enablement API Specification
  termsOfService: https://developer.mastercard.com/terms-of-use
  contact:
    name: API Support
    url: 'https://developer.mastercard.com/support'
    email: apisupport@mastercard.com
  version: 1.1.0
servers:
  - url: https://api.mastercard.com/loyalty/rewards
    description: Production API
  - url: https://sandbox.api.mastercard.com/loyalty/rewards
    description: Sandbox API
tags:
  - name: Account Management
    description: Allow to retrieve an account's information using account number.
  - name: Promotion Management
    description: The API will return the list of promotions based on the request parameters provided.
  - name: Promotion Progress
    description: The API returns information that represents key data points necessary to track the progression towards promotion goals for earnings rewards.
  - name: Transactions
    description: Provides clients with the ability to get transaction data related to a specific promotion so that the client can show the cardholders transactions that made up the rewards they have earned. The identifiers for a given promotion would be account identifiers.
paths:
  /accounts/searches:
    post:
      tags:
        - Account Management
      summary: Provides clients the ability to search and retrieve an account's information.
      description: This endpoint provides clients with the ability to search and retrieve an account's information using the combination of account number and company id or member ica.
      operationId: searchAccount
      x-mastercard-api-encrypted: true
      parameters:
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      requestBody:
        $ref: '#/components/requestBodies/AccountSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkSearchAccount'
        '400':
          $ref: '#/components/responses/ResponseSearchAccountBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
  /promotions:
    get:
      tags:
        - Promotion Management
      summary: Provides clients the ability to retrieve list of promotions based on the request parameters provided.
      description: This endpoint provides clients with the ability to retrieve all active promotions using the company id, program id, and/or account id.
      operationId: getPromotions
      parameters:
        - $ref: '#/components/parameters/RewardsCompanyId'
        - $ref: '#/components/parameters/ProgramId'
        - $ref: '#/components/parameters/PromotionId'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/PromotionState'
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          $ref: '#/components/responses/ActivePromotion'
        '400':
          $ref: '#/components/responses/PromotionsBadRequest'
        '401':
          $ref: '#/components/responses/PromotionsUnauthorized'
        '403':
          $ref: '#/components/responses/PromotionsForbidden'
        '404':
          $ref: '#/components/responses/PromotionsNotFound'
  /promotions/{promotion_id}/details:
    get:
      tags:
        - Promotion Management
      summary: Provides clients the ability to retrieve promotion details of particular promotion id.
      description: This endpoint provides clients with the ability to retrieve promotion details using the promotion id.
      operationId: getPromotionDetails
      parameters:
        - $ref: '#/components/parameters/PromotionIdPathParam'
      responses:
        '200':
          $ref: '#/components/responses/PromotionDetail'
        '400':
          $ref: '#/components/responses/PromotionsBadRequest'
        '401':
          $ref: '#/components/responses/PromotionsUnauthorized'
        '403':
          $ref: '#/components/responses/PromotionsForbidden'
        '404':
          $ref: '#/components/responses/PromotionsNotFound'
  /promotion-activations:
    post:
      tags:
        - Promotion Management
      summary: Provides clients the ability to opt accounts in to and out of a specific promotion.
      description: This endpoint provides clients with the ability to opt accounts in to and out of a specific promotion using the unique identifier of the account and promotion.
      operationId: postPromotionOptIn
      requestBody:
        $ref: "#/components/requestBodies/PromotionOptInRequest"
      responses:
        '201':
          $ref: '#/components/responses/Activated'
        '400':
          $ref: '#/components/responses/PromotionsBadRequest'
        '401':
          $ref: '#/components/responses/PromotionsUnauthorized'
        '403':
          $ref: '#/components/responses/PromotionsForbidden'
        '404':
          $ref: '#/components/responses/PromotionsNotFound'
  /promotion-progresses:
    get:
      tags:
        - Promotion Progress
      summary: Provides clients the ability to retrieve promotion progress data.
      description: This endpoint provides clients with the ability to retrieve reward progress data using household id, account_id and/or promotion id.
      operationId: getPromotionProgress
      parameters:
        - $ref: '#/components/parameters/HouseholdIdParam'
        - $ref: '#/components/parameters/AccountIdParam'
        - $ref: '#/components/parameters/PromotionIdParam'
        - $ref: '#/components/parameters/IncludeHistoryParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkPromotion'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
  /transactions:
    get:
      tags:
        - Transactions
      summary: Provides clients the ability to retrieve transaction data.
      description: This endpoint provides clients with the ability to retrieve transaction data related to a specific promotion.
      operationId: getTransactions
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
        - $ref: '#/components/parameters/FromDateParam'
        - $ref: '#/components/parameters/ToDateParam'
        - $ref: '#/components/parameters/PromotionIdParam'
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkTransaction'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'

components:
  requestBodies:
    AccountSearchRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountSearch'
    PromotionOptInRequest:
      description: Provides clients with the ability to opt accounts in to and out of a specific promotion using the unique identifier of the account and promotion
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/OptIn"
  parameters:
    FromDateParam:
      name: from_date
      in: query
      description: Start date from which the client want to view the transactions
      schema:
        type: string
        example: 2023-01-01
        format: date
    ToDateParam:
      name: to_date
      in: query
      description: End date till which the client want to view the transactions
      schema:
        type: string
        example: 2024-01-01
        format: date
    OffsetParam:
      name: offset
      in: query
      description: The number of items to offset the start of the list from (Pagination)
      schema:
        type: integer
        format: int32
        example: 0
        default: 0
    LimitParam:
      name: limit
      in: query
      description: Can be used to limit the amount of results returned from a query (Pagination)
      schema:
        type: integer
        format: int32
        example: 15
        default: 25
    HouseholdIdParam:
      name: household_id
      in: query
      description: Unique Household identifier assigned by Mastercard and provided during the account enrollment and household creation process.
      required: false
      schema:
        type: string
        format: uuid
        example: "ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8"
    AccountIdParam:
      name: account_id
      in: query
      description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response
      required: false
      schema:
        type: string
        format: uuid
      example: "f35e51fe-bc77-432f-b412-3800e3c04e5c"
    PromotionIdParam:
      name: promotion_id
      in: query
      description: The unique identifier of the Promotion created and assigned by Mastercard during promotion creation process
      schema:
        type: string
        format: uuid
      example: "2aee0729-3a1a-451a-affa-84f3a6bc5acc"
    IncludeHistoryParam:
      name: include_history
      in: query
      description: Boolean value which provides history of reward progress data
      schema:
        type: boolean
        example: true
        default: false
    RewardsCompanyId:
      name: rewards_company_id
      in: query
      description: Mastercard assigned unique identifier for a client. Created and assigned during company creation process
      example: "383a74b4-38b3-4f2a-a85d-6b2e26ad665"
      schema:
        type: string
        format: uuid
    ProgramId:
      name: program_id
      in: query
      description: Unique Program Identifier for a client promotion, available from promotion setup
      example: "aae5ce99-58d1-47f4-8b6a-43b427be9d74"
      schema:
        type: string
        format: uuid
    PromotionId:
      name: promotion_id
      in: query
      description: Unique Promotion Identifier for a client reward program, available from promotion setup
      example: "de0e1456-e678-4270-b027-fc9950b8aba5"
      schema:
        type: string
        format: uuid
    PromotionIdPathParam:
      name: promotion_id
      in: path
      description: Unique Promotion Identifier for a client reward program, available from promotion setup
      example: "de0e1456-e678-4270-b027-fc9950b8aba5"
      required: true
      schema:
        type: string
        format: uuid
    AccountId:
      name: account_id
      in: query
      description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response
      example: "f35e51fe-bc77-432f-b412-3800e3c04e5c"
      schema:
        type: string
        format: uuid
    PromotionState:
      name: promotion_state
      in: query
      description: Valid states are
        - INACTIVE - Promotion that has never been activated or already expired
        - ACTIVE - Active promotion that is live in a given environment.
        - VALIDATE - Promotion that is not active and is in test state
        - INVALID - promotion is an invalid state
      example: "ACTIVE"
      schema:
        type: string
        default: all
  responses:
    ResponseOkSearchAccount:
      description: Successfully Retrieved Account(s)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagedAccountSearchItem'
    ResponseSearchAccountBadRequest:
      description: Search Account Bad Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            BAD_REQUEST:
              $ref: '#/components/examples/SearchAccountBadRequest'
    ResponseOkPromotion:
      description: OK response including promotion progress data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PromotionProgressList'
    PromotionsBadRequest:
      description: Bad Request with errors for the promotions endpoints
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    PromotionsUnauthorized:
      description: Unauthorized response with errors for the promotions endpoints
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    PromotionsForbidden:
      description: Forbidden response with errors for the promotions endpoints
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            FORBIDDEN:
              $ref: '#/components/examples/Forbidden'
    PromotionsNotFound:
      description: Not Found with errors for the promotions endpoints
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseOkTransaction:
      description: OK response including paged transaction data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagedTransaction'
    ResponseBadRequest:
      description: Bad Request with errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseUnauthorizedError:
      description: Unauthorized error with errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseUnauthorized:
      description: Client could not be authorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            AUTHORIZATION_ERROR:
              $ref: '#/components/examples/Unauthorized'
    ResponseForbidden:
      description: Client is forbidden from this resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            FORBIDDEN:
              $ref: '#/components/examples/Forbidden'
    ResponseNotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ActivePromotion:
      description: OK response including client reward programs
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Promotions"
    PromotionDetail:
      description: OK response including details on a client reward program
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PromotionDetail"
    Activated:
      description: Successfully updated Opt-In choice
  schemas:
    AccountSearch:
      type: object
      properties:
        companyId:
          maxLength: 11
          type: string
          description: Mastercard assigned unique identifier for a client.
          example: '611532'
        memberICA:
          type: integer
          description: Interbank Card Association number assigned by Mastercard to the client.
          format: int64
          example: 611532
        accountNumberType:
          maxLength: 5
          type: string
          description: |
            The Field to identify type of value provided in accountNumber.
            - BAN – Bank Account Number. This is a unique Account Identifier which is a 16 digit card number with 3 trailing zeros and space filled
            - RANAC – Random Account Number. This is a unique account identifier.
            - AREF – Account Reference Number. This is a unique account identifier.
            - RANCU – Random Customer Number. This is a unique customer identifier.
            If accountNumberType is not provided then default value will be BAN
          example: 'BAN'
        accountNumber:
          maxLength: 19
          type: string
          description: The unique account identifier defined and provided by the client.
          example: '5330333671236516'
        userNumberType:
          maxLength: 5
          type: string
          description: |
            The Field to identify type of value provided in userNumber. 
            - BCN 
            - RANCU 
            - AREF
            
             If userNumberType is not provided then default value will be BCN
          example: 'BCN'
        userNumber:
          maxLength: 30
          type: string
          description: The unique identifier of a user assigned by the client.
          example: 'C02333333325'
    AccountSearchItem:
      type: object
      properties:
        id:
          maxLength: 50
          minLength: 0
          type: string
          format: uuid
          description: The unique reward account identifier assigned by the Mastercard.
          example: '308a1596-f42e-4569-bd12-c8f0827eed48'
        userId:
          maxLength: 50
          minLength: 0
          type: string
          format: uuid
          description: The unique User identifier assigned by the Mastercard.
          example: 'aee00b64-f320-4579-a87f-782a3c0b9722'
        householdId:
          maxLength: 50
          minLength: 0
          type: string
          format: uuid
          description: Unique Household identifier assigned by Mastercard.
          example: '87ht3780-62d1-4775-9549-8ed92c48c290'
        program:
          $ref: '#/components/schemas/Program'
        company:
          $ref: '#/components/schemas/Company'
        bankProduct:
          $ref: '#/components/schemas/BankProduct'
    Program:
      title: Program
      type: object
      properties:
        enrollmentCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The unique identifier for a client’s reward program, defined by the client and configured during implementation. A single program can have more than one code assigned as long as the identifiers are unique.
          example: ZXSzM
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Unique Program Identifier for a client promotion, available from promotion setup.
          example: 4f74f660-5793-4f33-a3bc-ffc7bee39238
    BankProduct:
      title: BankProduct
      type: object
      properties:
        code:
          maxLength: 50
          minLength: 0
          type: string
          description: The account’s associated reward product identifier as defined by the client and configured during the implementation of the program.
          example: 7274VCC
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Unique Identifier for a bank product
          format: uuid
          example: ff34f660-5793-4f33-a3bc-ffc7bee39238
    Company:
      title: Company
      type: object
      properties:
        memberICA:
          type: integer
          description: Interbank Card Association number assigned by Mastercard to the client.
          format: int64
          example: 898923
        companyId:
          maxLength: 11
          minLength: 0
          type: string
          description: Mastercard assigned unique identifier for a client.
          example: '611532'
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Unique identifier for this company and reward relation.
          format: uuid
          example: 5f74g660-5793-4f33-a3bc-ffc7bee39234
    Cap:
      type: object
      description: Contains reward capping information for a given promotion. Capping is the maximum amount of rewards that a user can get while the promotion is active. Capping can be applied on an account or transaction level and within a given time period.
      properties:
        entityType:
          type: string
          example: 'ACCOUNT'
          maxLength: 15
          description: Type at which the promotion cap is applied –  "ACCOUNT", "HOUSEHOLD"
        entityId:
          type: string
          format: uuid
          example: 'f35e51fe-bc77-432f-b412-3800e3c04e5c'
          maxLength: 50
          description: Unique identifier for the caps entity type - “ACCOUNT” or “HOUSEHOLD”.
        capId:
          type: string
          format: uuid
          example: 'd963516d-1fc0-47e7-acc2-3468b1f81473'
          maxLength: 50
          description: CapId is a unique identifier for the promotion capping rule.
        capPeriod:
          type: string
          example: 'M'
          maxLength: 10
          description: |
            The promotion period for which the cap will reset. 
            - For example, M (Month), indicates that the cap resets monthly. 
            - Eg. "<null | M (Month) | Y (Year) | L (Lifetime)>"
        capType:
          type: string
          example: 'group-cap'
          maxLength: 15
          description: Type of cap = "promotion-cap" or "group-cap".
        capPeriodValue:
          type: string
          example: '202108'
          maxLength: 15
          description: |
            Period value corresponding to cap Period. 
            - Eg. "YYYYMM" when capPeriod is "MONTH" and capPeriodMode is "CALENDAR"
            - Eg. "YYYYMMDD" when capPeriod is "MONTH/YEAR" and capPeriodMode is "ENROLLMENT_DATE/PRIMARY_ENROLLMENT_DATE"
        capThreshold:
          type: integer
          example: 5
          maxLength: 15
          description: Maximum amount of reward that can be awarded for the cap level of this promotion. (i.e. the cap amount)
          format: int64
        capValue:
          type: integer
          example: 3
          maxLength: 15
          description: Current value of earned rewards for this promotion. Could be one of (points, miles, amount, vouchers).
          format: int64
        capCurrencyCode:
          type: string
          example: 'USD'
          maxLength: 5
          description: ISO currency code for Caps configured for the given Promotion. Ex. US Dollar ISO code is USD.
        capPeriodMode:
          type: string
          example: 'CALENDAR'
          maxLength: 25
          description: CapPeriodMode is the mode on which the CapPeriod is based on. Ex. CALENDAR/ENROLLMENT_DATE/PRIMARY_ENROLLMENT_DATE.
    ErrorItem:
      type: object
      properties:
        Description:
          type: string
          description: Describes Error Type
          example: "Invalid account_id received"
        Details:
          type: string
          description: Describes details of Error Type
          example: "null"
        ReasonCode:
          type: string
          description: ReasonCode for Error Type
          example: "INVALID_INPUT"
        Recoverable:
          type: boolean
          description: Indicates if the Error Type is Recoverable
          example: false
        Source:
          type: string
          description: Indicates Source of Error Type
          example: "VALIDATION_ERROR"
    Errors:
      required:
        - Error
      type: object
      properties:
        Error:
          type: array
          description: List of ErrorItems
          items:
            $ref: '#/components/schemas/ErrorItem'
    ErrorsList:
      required:
        - Errors
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    PagedTransaction:
      type: object
      properties:
        count:
          type: integer
          description: The number of items that are in this offset batch
          format: int32
          example: 1
        offset:
          type: integer
          description: The number of items to offset the start of the list from
          format: int32
          example: 0
        limit:
          type: integer
          description: The number of items in the list to be limited to
          format: int32
          example: 25
        total:
          type: integer
          description: The total number of items that are in the entire collection
          format: int64
          example: 1
        items:
          type: array
          description: Items in transaction response
          items:
            $ref: '#/components/schemas/GetTransaction'
    Currency:
      type: object
      properties:
        issuerAmountSettlementCurrency:
          type: integer
          description: Transaction amount converted to cardholders currency.
          format: int64
          example: 12000
        issuerCurrencyCode:
          type: string
          description: Currency code that defines the currency type, the country of origin, and the implied decimal point location for the related amount of the transaction.
          example: 'USD'
        issuerCurrencyExponent:
          type: integer
          description: Cardholder billing currency exponent.
          format: int32
          example: 2
        settlementCurrencyCode:
          type: string
          description: Issuer settlement currency code.
          example: 'USD'
        settlementCurrencyExponent:
          type: integer
          description: Issuer settlement currency exponent.
          format: int32
          example: 2
        transactionAmountSettlementCurrency:
          type: integer
          description: Issuer settlement currency.
          format: int64
          example: 12000
        transactionAmountTransactionCurrency:
          type: integer
          description: The entire amount of a particular transaction.
          format: int64
          example: 12000
        transactionCurrencyCode:
          type: string
          description: Currency code that defines the currency type, the country of origin, and the implied decimal point location for the related amount of the transaction.
          example: 'USD'
        transactionCurrencyExponent:
          type: integer
          description: Currency exponent for transaction amount.
          format: int32
          example: 2
        usdEquivalent:
          type: integer
          description: Currency amount in USD
          format: int64
          example: 12000
        euroEquivalent:
          type: integer
          description: Currency amount in Euro
          format: int64
          example: 11102
    Merchant:
      type: object
      properties:
        acquirerIca:
          type: string
          description: Merchant acquirer Ica for the transaction.
          example: '12345'
        aggregateMerchantId:
          type: string
          description: The aggregate merchant ID of the merchant location matched to the transaction (or as assigned based on scrubbed transaction data if no location was matched and aggregate merchant assignment was requested). 99999 if not assigned.
          example: '985'
        city:
          type: string
          description: City of the merchant.
          example: 'BULGAKOVO'
        country:
          type: string
          description: Merchant country code of the transaction.
          example: 'USA'
        countryCode:
          type: string
          description: Country code of the merchant.
          example: 'USA'
        crossBorder:
          type: boolean
          description: Identifies whether the transaction is a cross-border transaction.
          example: true
        dbaName:
          type: string
          description: Provided by Merchant or Acquirer. This is the Trade Name of the establishment, captured in the GCMS message.
          example: 'SHORTDBANAME'
        locationId:
          type: string
          description: Location ID of the merchant location matched to the transaction. If no location can be determined the value 999999999 will be assigned.
          example: '624103356'
        mccClassificationCode:
          type: string
          description: Mastercard defined classification of Merchant Category Code.
          example: '4K'
        mccGroup:
          type: string
          description: Merchant Category Group assigned to MCC code in Merchant_Category_Hierarchy.
          example: '78'
        merchantCategoryCode:
          type: string
          description: Identifies the merchants primary business.
          example: '5311'
        merchantId:
          type: string
          description: Acquirer Merchant ID as defined by merchant processing for the transaction.
          example: '6442456804'
        name:
          type: string
          description: Merchant name of the transaction
          example: 'AAA'
        postalCode:
          type: string
          description: Postal code of the merchant.
          example: '81801'
        region:
          type: string
          description: Region code of the merchant location matched to the transaction (or the business region code of the scrubbed country code if no location was matched). If the scrubbed country code is unknown (XXX), a value of 99 is assigned.
          example: '5'
        shortDbaName:
          type: string
          description: The short DBA name derived from the scrubbed merchant DBA name for the transaction.
          example: 'OOOTERMSERV'
        state:
          type: string
          description: The state/province code of the merchant location matched to the transaction (or the scrubbed state/province code of the transaction if no location was matched. This will be spaces except for USA, CAN, and AUS. If the state/province code cannot be determined, values of 'XX', 'XP' or 'UNK" will be assigned for USA, CAN and AUS respectively.
          example: 'MO'
        storeDivision:
          type: string
          description: Merchant store division.
          example: '30078'
        storeNumber:
          type: string
          description: Merchant store number.
          example: '20002'
        streetAddress:
          type: string
          description: Street address of the merchant.
          example: 'B-N M-N AEROPORT STR BLD PAR'
    TransactionScore:
      type: object
      properties:
        pointType:
          type: string
          description: Specifies the point type which is either Base Points or Bonus Points.
          example: 'BONUS'
        promotionId:
          type: string
          description: Unique promotion identifier.
          format: uuid
          example: '2aee0729-3a1a-451a-affa-84f3a6bc5acc'
        promotionName:
          type: string
          description: Name of the promotion.
          example: 'Rewards Promo'
        rawScore:
          type: string
          description: Raw score (pre-capped score).
          example: '120'
        reason:
          type: string
          description: Reason code if there is any change in pre-capping or threshold score.
          example: 'cap'
        rewardType:
          type: string
          description: Specifies the reward type which is either Points or Rebate or Reward Item or Benefit.
          example: 'CASHBACK'
        score:
          type: string
          description: Final Score after capping.
          example: '100'
        postingAccountReferenceId:
          type: string
          description: Posting Account ReferenceId
          format: uuid
          example: '751678c0-079b-11eb-adc1-0242ac12aaaa'
    GetTransaction:
      type: object
      properties:
        accountInfo:
          type: boolean
          description: Indicates if an account number is present.
          example: true
        accountNumber:
          type: string
          description: Unique account identifier defined and provided by the client.
          example: '"1234-56**-****-7890-000" for 19 digit account numbers or "************1234" for 16 digit account numbers'
        acquirerCountryCode:
          type: string
          description: Identifies the geographic country of the Acquirer.
          example: 'USA'
        acquirerId:
          type: string
          description: Acquiring Institution ID Code identifies a transaction acquirer.
          example: '5037'
        acquirerReferenceNumber:
          type: string
          description: this reference number uniquely identifies the acquiring bank for the merchant
          example: '3080528744'
        authCode:
          type: string
          description: This is an alphanumeric code provided by Mastercard if applicable
          example: '050913'
        cardDataInputModeCode:
          type: string
          description: "Indicates the method used for entry to initiate a transaction with possible values
            - 0 - PAN entry mode unknown
            - 1 - PAN manual entry; no terminal used 
            - 2 - PAN auto-entry via magnetic strip: track data is not required within transaction
            - 6 - PAN manual entry using a terminal, or through voice transaction after chip card read error or chip fallback transaction failure
            - 7 - Credential on File (effective June 12, 2018)
            - A - PAN auto-entry via contactless magnetic stripe: track data provided unaltered within transaction
            - B - PAN auto-entry via magnetic stripe: track data provided unaltered within transaction (magnetic stripe entry may also be chip fallback transaction).
            - C - PAN auto-entry via chip (online authorized transaction)
            - F - PAN auto-entry via chip (offline chip-approved transaction)
            - M - PAN auto-entry via contactless M/Chip
            - R - PAN entry via electronic commerce containing Digital Secure Remote Payment (DSRP) cryptogram within DE 55 (Integrated Circuit Card [ICC])
            - S - PAN entry via electronic commerce
            - T - PAN auto-entry via server (issuer, acquirer, or third party vendor system)"
          example: 'M'
        cardHolderPresentCode:
          type: string
          description: "Indicates whether the cardholder is present at the point of service and explains the condition if the cardholder is not present with possible values
            - 0 - Cardholder present
            - 1 - Cardholder not present (unspecified)
            - 2 - Cardholder not present (mail/facsimile transaction)
            - 3 - Cardholder not present (phone order or from automated response unit [ARU])
            - 4 - Cardholder not present (standing order/recurring transactions)
            - 5 - Cardholder not present (electronic order [PC, Internet, mobile phone, or PDA]) 
            - 9 - Unknown; data unavailable"
          example: '0'
        cardPresentCode:
          type: string
          description: Indicates if the card is present at the point of service (example:0,1).
          example: '1'
        clientTransactionCode:
          type: string
          description: This code can be used for noting specific bank transactions. For example, 10001 - Bill pay, 10002 = loan payment.
          example: 'DVWPO'
        companyIca:
          type: string
          description: Mastercard assigned unique identifier for the company. This is a numeric ID with leading zeros to make up the 6 digits.
          example: '611532'
        companyId:
          type: string
          description: Mastercard assigned unique identifier for the company.
          example: '4K'
        companyPromotionField:
          type: string
          description: This is an arbitrary field that can be used by issuers to provide data to be used in promotions
          example: '72882990'
        currency:
          $ref: '#/components/schemas/Currency'
        debitSwitch:
          type: string
          description: "This switch is used to identify submitted transactions that might require specialized scoring needs. Valid values are: Y = debit transaction, N = anything"
          example: 'N'
        exceptionId:
          type: string
          description: Numeric ID assigned by Mastercard scoring system to indicate an exception on the scored transaction. This is a numeric ID.
          example: '208058744'
        interchangeRateDesignator:
          type: string
          description: Interchange rate designator for the transaction.
          example: '2A'
        issuerCountryCode:
          type: string
          description: Identifies the geographic country of the Issuer.
          example: 'USA'
        issuerId:
          type: string
          description: unique identifier for the issuer, generated by Mastercard during issuer enrolment.
          example: '10455'
        issuerRegion:
          type: string
          description: Identifies the region of the Issuer.
          example: '05'
        itemCode:
          type: string
          description: Unique code number for item in transaction.
          example: 'Orbit'
        itemDescription:
          type: string
          description: Description of item in transaction.
          example: 'Sony Walkman'
        itemSku:
          type: string
          description: Unique SKU number associated with item in transaction.
          example: '21043332'
        merchant:
          $ref: '#/components/schemas/Merchant'
        offerType:
          type: string
          description: This is an alphanumeric code. Only used for SKU level promotions. Generally not provided by merchant/ acquirer.
          example: '00101'
        productCode:
          type: string
          description: The account’s associated reward product identifier as defined by the client and configured during the implementation of the program.
          example: 'MCB'
        productLine:
          type: string
          description: The account’s associated reward product identifier as defined by the client and configured during the implementation of the program. Only used for SKU level promotions. Generally not provided by merchant/ acquirer.
          example: '30003'
        rewardPostingDateTime:
          type: string
          format: date-time
          description: Date when the transaction posted.
          example: '2020-01-12T05:00:00+0000'
        routeNumber:
          type: string
          description: this is a numeric value that indicates the route used for the transaction that travels through the payment network from point of sale to Mastercard.
          example: '29920212'
        sellingChannel:
          type: string
          description: Channel through which the given transaction occurred. Only used for SKU level promotions. Generally not provided by merchant/ acquirer.
          example: '2524635'
        sequenceNumber:
          type: string
          description: Numerical sequence number of the original Transaction
          example: '10000124564'
        tokenRequestorId:
          type: string
          description: The TRID uniquely identifies a token requestor (such as a Wallet Provider) that’s leveraging MDES for tokenized transactions.
          example: '50139059239'
        transactionAmount:
          type: integer
          description: Indicates the amount of the transaction.
          format: int64
          example: 12000
        transactionAmountFormatted:
          type: string
          description: Formatted transaction amount.
          example: '$120.00'
        transactionDateTime:
          type: string
          format: date-time
          description: Date and time of the transaction.
          example: '2020-01-12T05:00:00+0000'
        transactionId:
          type: string
          description: unique identifier of the transaction generated by Mastercard system when transaction is received.
          format: uuid
          example: 'f66e7af3-3a09-451a-9331-e0baa8f97acd'
        transactionScores:
          type: array
          description: scores assigned to transaction after capping. There are two scores, raw score (pre-capped score), score (final score after capping has been applied)
          items:
            $ref: '#/components/schemas/TransactionScore'
        transactionSourceCode:
          type: string
          description: Source of Transaction (example:GCMS).
          example: 'GCMS'
        transactionType:
          type: string
          description: Unique transaction type code in Data Warehouse; maps to DE3s1 value.
          example: '5'
        walletProgramCode:
          type: string
          description: Provides information about how transactions initiated through the user of a digital wallet.
          example: '146'
        installmentPurchaseAmt:
          type: integer
          description: This field represents the Total Purchase Amount example 128000.
          format: int64
          example: 128000
        installmentNum:
          type: integer
          description: This field represents how many installments the Total Purchase Amount has been broken into is example 5.
          format: int32
          example: 5
        installmentPaymentNum:
          type: integer
          description: This field represents what installment number the transaction is example 1 of 5.
          format: int32
          example: 1
    PromotionProgressList:
      type: object
      properties:
        promotionProgresses:
          type: array
          description: List of PromotionProgress
          items:
            $ref: '#/components/schemas/PromotionProgress'
    PromotionProgress:
      type: object
      properties:
        promotionId:
          type: string
          format: uuid
          example: '2aee0729-3a1a-451a-affa-84f3a6bc5acc'
          maxLength: 50
          description: Unique Identifier for the promotion for which reward progress is retrieved.
        programId:
          type: string
          format: uuid
          example: 'f06b850a-1943-420a-bb15-c8de8f101d5e'
          maxLength: 50
          description:  Unique Program Id for the business partner program to which this promotion belongs to.
        active:
          type: boolean
          example: TRUE
          description: Indicates whether this promotion is currently active (true) or inactive (false). Promotion end date should be after current date.
        progresses:
          type: array
          description: List of ProgressSummary
          items:
            $ref: '#/components/schemas/ProgressSummary'
        rules:
          type: array
          description: List of rules/threshold
          items:
            $ref: '#/components/schemas/Rule'
        caps:
          type: array
          description: List of Caps
          items:
            $ref: '#/components/schemas/Cap'
    ProgressSummary:
      type: object
      properties:
        entityType:
          type: string
          example: 'HOUSEHOLD'
          maxLength: 15
          description: |
            Unique Household identifier assigned by Mastercard and provided during the account enrollment and household creation process. or Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
        entityId:
          type: string
          format: uuid
          example: 'ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8'
          maxLength: 50
          description: Unique identifier for the progress entity type - “ACCOUNT” or “HOUSEHOLD”.
        rewardsReceivedCount:
          type: integer
          example: 5
          maxLength: 15
          description: Number of times the account has received a reward for this promotion, regardless of the reward type (points, miles, amount)
          format: int64
        totalRewardsReceived:
          type: integer
          example: 5
          maxLength: 15
          description: Total rewards (points, miles, rebate amount) received for this promotion.
        rewardsCurrencyCode:
          type: string
          example: 'USD'
          maxLength: 5
          description: ISO currency code for the promotion award currency selected by the client during the Promotion Setup. Ex. US Dollar ISO code is USD.
    Rule:
      type: object
      properties:
        entityType:
          type: string
          example: 'HOUSEHOLD'
          maxLength: 15
          description: Indicates level at which the promotion rule is applied. “ACCOUNT” or “HOUSEHOLD”.
        entityId:
          type: string
          format: uuid
          example: 'ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8'
          maxLength: 50
          description: Unique identifier for the rules entity type - “ACCOUNT” or “HOUSEHOLD”.
        ruleId:
          type: string
          format: uuid
          example: 'da06a951-0237-4f32-affb-16502ae7dc9a'
          maxLength: 50
          description: Rule Id is a unique identifier for the promotion rule.
        ruleThreshold:
          type: integer
          example: 5
          maxLength: 15
          description: This is the minimum amount of cumulative spend or count of transactions that needs to be met in order to receive reward.
          format: int64
        ruleType:
          type: string
          example: 'COUNT'
          maxLength: 10
          description: |
            Threshold Type for ruleValue and ruleThreshold. 
            - COUNT = Cumulative number of times a qualifying transaction or behavior needs to be made in order to receive a reward 
            - SPEND = Cumulative amount of spend across qualifying transactions that needs to be made in order to receive a reward
        ruleValue:
          type: integer
          example: 4
          maxLength: 15
          description: The account’s progress towards a rule threshold. A threshold could be the cumulative spend or count of transactions made.
          format: int64
        rulePeriod:
          type: string
          example: 'M'
          maxLength: 10
          description: Period for which promotion rule is applied – “MONTH”, “YEAR”, “LIFETIME”.
        rulePeriodValue:
          type: string
          example: '202108'
          maxLength: 15
          description: Period value corresponding to rule Period - "YYYYMM” when rulePeriod is “MONTH”.
        ruleCurrencyCode:
          type: string
          example: 'USD'
          maxLength: 5
          description: ISO currency code for threshold Rules configured for the given Promotion. Ex. US Dollar ISO code is USD.
    Account:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
          example: "f35e51fe-bc77-432f-b412-3800e3c04e5c"
        activation:
          type: boolean
          description: Specifies if the account is opted-in or out for this promotion.
          example: true
        activationDateTime:
          type: string
          format: date-time
          description: Specifies the date when user has optedin or opted out of a promotion.
          example: "2020-06-04T15:19:31.827Z"
    ExternalTargetRecord:
      type: object
      properties:
        externalTargetCode:
          type: string
          description: Code for the associated external target
          example: "pYtYI3Otdn"
        externalBeginDateTime:
          type: string
          format: date-time
          description: Begin date of external target record
          example: "2020-06-17T20:19:55.763Z"
        beginDateTime:
          type: string
          format: date-time
          description: Begin date of promotion association to external target
          example: "2020-05-18T20:19:55.763Z"
        endDateTime:
          type: string
          format: date-time
          description: End date of promotion association to external target
          example: "2020-07-18T20:19:55.765Z"
        entityType:
          type: string
          description: Indicates at which level the external target is associated - either 'A' for Account or 'H' for Household
          example: "A"
        entityId:
          type: string
          format: uuid
          description: Code for the associated external target
          example: "7e747d4a-b585-4990-8756-53996b222804"
        source:
          type: string
          description: Unique entity identifier for external target type which can be the primary account id or just an associated account id
          example: "GRP"
        statusCode:
          type: string
          description: Status code for the associated external target - 'Q', 'P', 'D'
          example: "Q"
        eventDateTime:
          type: string
          format: date-time
          description: Event date time of record sync with the specific source - 'MRS' or 'GRP'
          example: "2020-07-18T20:19:55.765Z"
        externalReferenceId:
          type: string
          description: Identifier for company the external target is associated with
          example: "90909090"
    Promotion:
      type: object
      properties:
        accounts:
          type: array
          description: Contains the account details and most recent opt-in/out decision of the account for the promotion.
          items:
            $ref: "#/components/schemas/Account"
        externalTargetRecords:
          type: array
          description: List of External Target Records sent by the customer.
          items:
            $ref: "#/components/schemas/ExternalTargetRecord"
        activationRequired:
          type: boolean
          example: true
          description: |
            Specifies if a promotion is enabled for Opt-In/Opt-Out.
            - true = Opt-in/out enabled
            - false = Opt-in/out not enabled, account is opted into promotion by default if targeted.
        targetingEnabled:
          type: boolean
          example: false
          description: |
            Specifies if a promotion is enabled for targeting.
            - true = Targeting enabled, account has to be targeted for transactions to qualify.
            - false = Targeting not enabled, all accounts are eligible into promotion by default.
        beginDateTime:
          type: string
          format: date-time
          description: Promotion start date.
          example: "2020-05-05T15:19:31.823Z"
        description:
          type: string
          description: Human readable summary of a promotion
          example: "Promotion for digital rewards"
        endDateTime:
          type: string
          format: date-time
          description: Promotion end date.
          example: "2020-07-05T15:19:31.827Z"
        scoringBeginDateTime:
          type: string
          format: date-time
          description: The first date the promotion will be scored
          example: "2023-02-01T15:15:31.827Z"
        scoringEndDateTime:
          type: string
          format: date-time
          description: The last day the promotion will be scored.
          example: "2023-02-01T15:15:31.827Z"
        postingBeginDateTime:
          type: string
          format: date-time
          description: Only transactions that were posted to Global rewards platform on or after the begin date will be considered when qualifying the transaction for an award.
          example: "2023-02-01T15:15:31.827Z"
        postingEndDateTime:
          type: string
          format: date-time
          description: Only transactions that were posted to Global rewards platform on or before the end date will be considered when qualifying the transaction for an award.
          example: "2023-02-01T15:15:31.827Z"
        transactionBeginDateTime:
          type: string
          format: date-time
          description: Only transactions that occur on or after this date will be considered when qualifying the transaction for an award.
          example: "2023-02-01T15:15:31.827Z"
        transactionEndDateTime:
          type: string
          format: date-time
          description: Only transactions that occur on or before this date will be considered when qualifying the transaction for an award.
          example: "2023-02-01T15:15:31.827Z"
        frequency:
          type: string
          description: Indicator of the recurrence of a promotion
          example: "RECURRING"
        name:
          type: string
          description: Name of the promotion.
          example: "Digital Rewards"
        programId:
          type: string
          format: uuid
          description: Unique program identifier.
          example: "aae5ce99-58d1-47f4-8b6a-43b427be9d74"
        promotionId:
          type: string
          format: uuid
          description: Unique promotion identifier.
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
        timeZoneId:
          type: string
          description: Time zone of a promotion.
          example: "America/Chicago"
        statusCode:
          type: string
          description: Current status of the promotion. Can be "ACTIVE", "INACTIVE", "PAUSED", or "INVALID"
          example: "ACTIVE"
        statusChangedDateTime:
          type: string
          format: date-time
          description: The time when the status was updated.
          example: "2020-06-05T15:19:31.827Z"
    OptIn:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
          example: "f35e51fe-bc77-432f-b412-3800e3c04e5c"
        activation:
          type: boolean
          description: |
            Specifies if the consumer is opting in or opting out of a promotion.
            - true = Opt-In
            - false = Opt-Out
          example: true
        promotionId:
          type: string
          format: uuid
          description: The unique identifier of the Promotion.
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
    Promotions:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 1
          description: The number of items that are in this offset batch
        offset:
          type: integer
          format: int32
          example: 1
          description: The number of items to offset the start of the list from
        limit:
          type: integer
          format: int32
          example: 25
          description: The number of items in the list to be limited to
        total:
          type: integer
          format: int64
          example: 1
          description: The total number of items that are in the entire collection
        items:
          type: array
          description: List of Promotions
          items:
            $ref: "#/components/schemas/Promotion"
    PromotionDetail:
      type: object
      properties:
        caps:
          type: array
          description: List of Caps applied to the Promotion
          items:
            $ref: '#/components/schemas/PromotionCap'
        promotionId:
          type: string
          description: Unique promotion identifier
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
        rewardConfig:
          type: object
          description: Rewards information
          properties:
            promotionId:
              type: string
              format: uuid
              description: Unique promotion identifier
              example: "de0e1456-e678-4270-b027-fc9950b8aba5"
            referenceId:
              type: string
              format: uuid
              description: Unique reward config identifier
              example: "de89f43c-8fbe-45ae-b5d2-ab965ecaa956"
            rebateText:
              type: string
              description: Specifies the text that shows up on cardholders billing statement for a purchase (Only applicable for a rebate)
              example: "REBATE"
            rebateTextNegative:
              type: string
              description: Specifies the text that shows up on cardholders billing statement for a return (Only applicable for a rebate)
              example: "RETURN"
            rewardType:
              type: string
              description: |
                Specifies the type of reward.
                - CASHBACK - Cashback
                - POINTS - Points
                - REWARD_ITEM - Reward Item
                - BENEFIT - Benefit
              example: "CASHBACK"
            pointType:
              type: string
              description: |
                Specifies how the points are awarded (Only applicable if rewardType is POINTS).
                - BASE_POINTS - Base points
                - BONUS_POINTS - Bonus points
              example: "BASE_POINTS"
            awardType:
              type: string
              description: |
                Specifies if the award is going to be a fixed amount or if its going to be based on transaction amount.
                - FIXED - Fixed amount
                - PERCENTAGE - Percentage of transaction amount
              example: "FIXED"
            applyAwardTo:
              type: string
              description: |
                Specifies if the award is applied to transacting account or the household primary account.
                - TRANSACTING_ACCOUNT - Transacting account
                - PRIMARY_ACCOUNT - Household primary account
              example: "TRANSACTING_ACCOUNT"
            scoreBasedOn:
              type: string
              description: |
                Specifies how the transactions are scored.
                - DE4_TRANSACTION_AMOUNT - Transaction amount
                - DE5_SETTLEMENT_AMOUNT - Settlement amount
                - DE6_CARDHOLDER_BILLING_AMOUNT - Cardholder billing amount
              example: "DE4_TRANSACTION_AMOUNT"
            rewardRate:
              type: string
              description: If the awardType is FIXED, this field specifies the amount that is awarded. And if the awardType is not fixed then it specifies the percentage of transaction amount.
              example: "10"
        thresholds:
          type: array
          description: List of Thresholds applied to the Promotion
          items:
            $ref: '#/components/schemas/PromotionThreshold'
    PromotionThreshold:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique threshold identifier
          example: "fbbbba72-141d-41f5-9ace-69129f971010"
        type:
          type: string
          description: |
            Specifies if the threshold is based on transaction count or transaction spend amount.
            - COUNT - Transaction count
            - SPEND - Transaction spend amount
          example: "AMOUNT"
        fieldType:
          type: string
          description: |
            If the type selected is SPEND, then this field specifies which amount value is used to accumulate toward the threshold.
            - DE04 - Transaction Amount
            - DE06 - Cardholder Billing Amount
          example: "DE04"
        value:
          type: number
          format: double
          description: The spend amount or the count that must be reached before the award is given
          example: 1000.00
        level:
          type: string
          description: |
            Specifies the level at which the threshold is applied.
            - A - Account level (All accounts have their own threshold)
            - H - Household level (Each account contributes toward reaching the threshold)
          example: "A"
        periodInDaysAfterDate:
          type: integer
          format: int32
          description: Number of days the cardholder has to meet the threshold before its expired
          example: 10
        dateFieldType:
          type: string
          description: |
            Specifies the date type used for starting the count on how long the account has for meeting the threshold.
            - ENROLLMENT_DATE - The date on which the cardholder has enrolled to the program
            - TARGET_BEGIN_DATE - The date on which the account is set to be targeted into a promotion
            - ACTIVE_DATE - The date on which enrollment record was added to the system
            - OPTIN_DATE - The date on which the account has opted into the promotion
          example: "ENROLLMENT_DATE"
    PromotionCap:
      type: object
      properties:
        amount:
          type: number
          format: double
          description: Specifies the cap amount
          example: 1000.00
        enabled:
          type: boolean
          description: Indicates if capping is enabled for the promotion
          example: TRUE
        id:
          type: string
          format: uuid
          description: Unique cap identifier
          example: "59266873-45c9-418f-a9dc-1b0f00d0bc16"
        level:
          type: string
          description: |
            Specifies the level at which cap is applied.
            - A - Account level
            - P - Household level
            - T - Transaction level
          example: "A"
        period:
          type: string
          description: |
            Specifies the period for which cap is applied.
            - M - Monthly
            - Y - Yearly
            - L - Lifetime
          example: "M"
    PagedAccountSearchItem:
      type: object
      properties:
        count:
          type: integer
          description: The number of items that are in this offset batch
          format: int32
          example: 1
        offset:
          type: integer
          description: The number of items to offset the start of the list from
          format: int32
          example: 0
        limit:
          type: integer
          description: The number of items in the list to be limited to
          format: int32
          example: 25
        total:
          type: integer
          description: The total number of items that are in the entire collection
          format: int64
          example: 1
        items:
          minItems: 0
          type: array
          description: The list of Accounts that are in the entire collection
          items:
            $ref: '#/components/schemas/AccountSearchItem'
  examples:
    SearchAccountBadRequest:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: MISSING_REQUIRED_FIELD_ACCOUNT_NUMBER
              Description: Account Number is required.
              Recoverable: false
              Details: null
    Unauthorized:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: AUTHORIZATION_ERROR
              Description: Client could not be authorized.
              Recoverable: true
              Details: null
    Forbidden:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: FORBIDDEN
              Description: Client does not have permission.
              Recoverable: true
              Details: null
