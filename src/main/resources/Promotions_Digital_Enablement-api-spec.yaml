openapi: 3.0.3
info:
  title: Promotions Digital Enablement API
  description: Promotions Digital Enablement API Specification
  termsOfService: https://developer.mastercard.com/terms-of-use
  contact:
    name: API Support
    url: 'https://developer.mastercard.com/support'
    email: apisupport@mastercard.com
  version: 1.1.0
servers:
  - url: https://api.mastercard.com/loyalty/rewards
    description: Production API
  - url: https://sandbox.api.mastercard.com/loyalty/rewards
    description: Sandbox API
tags:
  - name: Account Management
    description: Allow to retrieve an account's information using account number.
  - name: Promotion Management
    description: Promotion Management API
  - name: Promotion Progress
    description: Promotion Progress Controller
  - name: Transactions
    description: Transactions Controller
paths:
  /accounts/searches:
    post:
      tags:
        - Account Management
      summary: Provides clients the ability to search and retrieve an account's information.
      description: This endpoint provides clients with the ability to search and retrieve an account's information using the combination of account number and company id or member ica.
      operationId: searchAccount
      x-mastercard-api-encrypted: true
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      requestBody:
        $ref: '#/components/requestBodies/AccountSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkSearchAccount'
        '400':
          $ref: '#/components/responses/ResponseSearchAccountBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
  /promotions:
    get:
      tags:
        - Promotion Management
      summary: getPromotions
      description: Retrieve Promotions
      operationId: getPromotionsUsingGET
      parameters:
        - $ref: '#/components/parameters/RewardsCompanyId'
        - $ref: '#/components/parameters/ProgramId'
        - $ref: '#/components/parameters/PromotionIdQueryParam'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/PromotionState'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOKActivePromotion'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
  /promotions/{promotion_id}/details:
    get:
      tags:
        - Promotion Management
      summary: getPromotionDetails
      description: Retrieve Promotion Details
      operationId: getPromotionDetailsUsingGET
      parameters:
        - $ref: '#/components/parameters/PromotionId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOKPromotionDetail'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
  /promotion-activations:
    post:
      tags:
        - Promotion Management
      summary: promotionOptIn
      description: Promotions OptIn/OptOut
      operationId: promotionOptInUsingPOST
      requestBody:
        $ref: "#/components/requestBodies/PromotionOptInRequest"
      responses:
        '201':
          $ref: '#/components/responses/ResponseActivated'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
  /promotion-progresses:
    get:
      tags:
        - Promotion Progress
      summary: retrieve
      description: Retrieve Promotion Progress Information
      operationId: retrieveUsingGET
      parameters:
        - $ref: '#/components/parameters/HouseholdIdParam'
        - $ref: '#/components/parameters/AccountIdParam'
        - $ref: '#/components/parameters/PromotionIdParam'
        - $ref: '#/components/parameters/IncludeHistoryParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkPromotion'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get Transactions
      description: Fetches data from transaction table
      operationId: getTransactionsUsingGET
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
        - $ref: '#/components/parameters/FromDateParam'
        - $ref: '#/components/parameters/ToDateParam'
        - $ref: '#/components/parameters/PromotionIdParam'
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseOkTransaction'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '401':
          $ref: '#/components/responses/ResponseUnauthorizedError'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'

components:
  requestBodies:
    AccountSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountSearch'
    PromotionOptInRequest:
      description: optInList
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/OptIn"
  parameters:
    FromDateParam:
      name: from_date
      in: query
      description: from_date
      schema:
        type: string
        example:
    ToDateParam:
      name: to_date
      in: query
      description: to_date
      schema:
        type: string
        example:
    OffsetParam:
      name: offset
      in: query
      description: offset
      schema:
        type: integer
        format: int32
        example: 0
        default:
    LimitParam:
      name: limit
      in: query
      description: limit
      schema:
        type: integer
        format: int32
        example: 25
        default: 25
    HouseholdIdParam:
      name: household_id
      in: query
      description: household_id
      required: false
      schema:
        type: string
        example: "ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8"
    AccountIdParam:
      name: account_id
      in: query
      description: account_id
      required: false
      schema:
        type: string
        example: "f35e51fe-bc77-432f-b412-3800e3c04e5c"
    PromotionIdParam:
      name: promotion_id
      in: query
      description: promotion_id
      schema:
        type: string
        example: "2aee0729-3a1a-451a-affa-84f3a6bc5acc"
    IncludeHistoryParam:
      name: include_history
      in: query
      description: include_history
      schema:
        type: boolean
        example: false
        default: false
    RewardsCompanyId:
      name: rewards_company_id
      in: query
      description: Company Identifier
      example: "383a74b4-38b3-4f2a-a85d-6b2e26ad665"
      schema:
        type: string
    ProgramId:
      name: program_id
      in: query
      description: Program Identifier
      example: "aae5ce99-58d1-47f4-8b6a-43b427be9d74"
      schema:
        type: string
    PromotionIdQueryParam:
      name: promotion_id
      in: query
      description: Promotion Identifier
      example: "de0e1456-e678-4270-b027-fc9950b8aba5"
      schema:
        type: string
    PromotionId:
      name: promotion_id
      in: path
      description: Promotion Identifier
      example: "de0e1456-e678-4270-b027-fc9950b8aba5"
      required: true
      schema:
        type: string
    AccountId:
      name: account_id
      in: query
      description: Account Identifier
      example: "Gd3pnH3bQh"
      schema:
        type: string
    PromotionState:
      name: promotion_state
      in: query
      description: Promotion State such as all, current, future, expired, future+current
      example: "all"
      schema:
        type: string
        default: all
    Offset:
      name: offset
      in: query
      description: The number of items to offset the start of the list from (Pagination)
      required: false
      example: 0
      schema:
        type: integer
        format: int32
        default: 0
    Limit:
      name: limit
      in: query
      description: Can be used to limit the amount of results returned from a query (Pagination)
      required: false
      example: 25
      schema:
        type: integer
        format: int32
        default: 25
  responses:
    ResponseOkSearchAccount:
      description: Successfully Retrieved Account(s)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagedResponseOfAccountSearch'
    ResponseSearchAccountBadRequest:
      description: Search Account Bad Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            BAD_REQUEST:
              $ref: '#/components/examples/SearchAccountBadRequest'
    ResponseOkPromotion:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PromotionProgressList'
    ResponseOkTransaction:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagedResponseGetTransactionDto'
    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseUnauthorizedError:
      description: Unauthorized error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseUnauthorized:
      description: Client could not be authorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            AUTHORIZATION_ERROR:
              $ref: '#/components/examples/Unauthorized'
    ResponseForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
          examples:
            FORBIDDEN:
              $ref: '#/components/examples/Forbidden'
    ResponseNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsList'
    ResponseOKActivePromotion:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Promotions"
    ResponseOKPromotionDetail:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PromotionDetail"
    ResponseActivated:
      description: Successfully updated Opt-In choice
  schemas:
    AccountSearch:
      type: object
      properties:
        companyId:
          maxLength: 11
          type: string
          description: Mastercard assigned unique identifier for a client.
          example: '611532'
        memberICA:
          type: integer
          description: Interbank Card Association number assigned by Mastercard to the client.
          format: int64
          example: 611532
        accountNumber:
          maxLength: 19
          type: string
          description: The unique account identifier defined and provided by the client.
          example: '5330333671236516'
        accountNumberType:
          maxLength: 5
          type: string
          description: The filed to identify accountNumber type BAN/RANAC/AREF.
          example: 'BAN'
        userNumber:
          maxLength: 19
          type: string
          description: The unique user identifier defined and provided by the client.
          example: '5330333671236516'
        userNumberType:
          maxLength: 5
          type: string
          description: The filed to identify userNumber type BCN/RANCU/AREF.
          example: 'BCN'
    AccountSearchItem:
      type: object
      properties:
        userId:
          maxLength: 50
          minLength: 0
          type: string
          description: Unique User identifier assigned by Mastercard.
          example: 87ht3780-62d1-4775-9549-8ed92c48c290
        id:
          maxLength: 50
          minLength: 0
          type: string
          description: Unique reward account identifier assigned by Mastercard.
          example: 87ht3780-62d1-4775-9549-8ed92c48c290
        householdId:
          maxLength: 50
          minLength: 0
          type: string
          description: Unique Household identifier assigned by Mastercard.
          example: 87ht3780-62d1-4775-9549-8ed92c48c290
        program:
          $ref: '#/components/schemas/Program'
        company:
          $ref: '#/components/schemas/Company'
        bankProduct:
          $ref: '#/components/schemas/BankProduct'
    Program:
      title: Program
      type: object
      properties:
        enrollmentCode:
          maxLength: 18
          type: string
          description: 'The unique identifier for a client''s reward program, defined by the client and configured during implementation.'
          example: ZXSzM
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Unique Program identifier assigned by Mastercard and provided to client in the account enrollment response.
          example: c8753780-62d1-4775-9549-8ed92c48c278
    Company:
      title: Company
      type: object
      properties:
        memberICA:
          type: integer
          description: Interbank Card Association number assigned by Mastercard to the client.
          format: int64
          example: 898923
        companyId:
          maxLength: 11
          type: string
          description: Mastercard assigned unique identifier for a client.
          example: '611532'
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Unique Reward Company identifier assigned by Mastercard and provided to client in the account enrollment response.
          example: 98753780-62d1-4775-9549-8ed92c48c245
    BankProduct:
      title: BankProduct
      type: object
      properties:
        code:
          maxLength: 50
          minLength: 0
          type: string
          description: Bank Product Code
          example: 7274VCC
        id:
          maxLength: 50
          minLength: 20
          type: string
          description: Bank Product Id
          example: ff34f660-5793-4f33-a3bc-ffc7bee39238
    Cap:
      type: object
      properties:
        entityType:
          type: string
          example: ACCOUNT
          maxLength: 15
          description: Type at which the promotion cap is applied –  "ACCOUNT", "HOUSEHOLD"
        entityId:
          type: string
          example: f35e51fe-bc77-432f-b412-3800e3c04e5c
          maxLength: 50
          description: Unique identifier for the caps entity type - “ACCOUNT” or “HOUSEHOLD”.
        capId:
          type: string
          example: d963516d-1fc0-47e7-acc2-3468b1f81473
          maxLength: 50
          description: CapId is a unique identifier for the promotion capping rule.
        capPeriod:
          type: string
          example: M
          maxLength: 10
          description: The promotion period for which the cap will reset. For example, M (Month), indicates that the cap resets monthly. <br/> Eg. "<null | M (Month) | Y (Year) | L (Lifetime)>"
        capType:
          type: string
          example: group-cap
          maxLength: 15
          description: Type of cap = "promotion-cap" or "group-cap".
        capPeriodValue:
          type: string
          example: "202108"
          maxLength: 15
          description: Period value corresponding to cap Period. <br/> Eg. "YYYYMM" when capPeriod is "MONTH" <br/> Eg. "YYYY" when capPeriod is "YEAR"
        capThreshold:
          type: integer
          example: 5
          maxLength: 15
          description: Maximum amount of reward that can be awarded for the cap level of this promotion. (i.e. the cap amount)
          format: int64
        capValue:
          type: integer
          example: 3
          maxLength: 15
          description: Current value of earned rewards for this promotion. Could be one of (points, miles, amount, vouchers).
          format: int64
        capCurrencyCode:
          type: string
          example: USD
          maxLength: 5
          description: ISO currency code for Caps configured for the given Promotion. Ex. US Dollar ISO code is USD.
    ErrorItem:
      type: object
      properties:
        Description:
          type: string
          description: Describes Error Type
          example: "Invalid account_id received"
        Details:
          type: string
          description: Describes details of Error Type
          example: "null"
        ReasonCode:
          type: string
          description: ReasonCode for Error Type
          example: "INVALID_INPUT"
        Recoverable:
          type: boolean
          description: Indicates if the Error Type is Recoverable
          example: "false"
        Source:
          type: string
          description: Indicates Source of Error Type
          example: "VALIDATION_ERROR"
    Errors:
      required:
        - Error
      type: object
      properties:
        Error:
          type: array
          description: List of ErrorItems
          items:
            $ref: '#/components/schemas/ErrorItem'
    ErrorsList:
      required:
        - Errors
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    PagedResponseGetTransactionDto:
      type: object
      properties:
        count:
          type: integer
          description: The number of items that are in this offset batch
          format: int32
          example: 1
        offset:
          type: integer
          description: The number of items to offset the start of the list from
          format: int32
          example: 0
        limit:
          type: integer
          description: The number of items in the list to be limited to
          format: int32
          example: 25
        total:
          type: integer
          description: The total number of items that are in the entire collection
          format: int64
          example: 1
        items:
          type: array
          description: Items in transaction response
          items:
            $ref: '#/components/schemas/GetTransactionDto'
    CurrencyDto:
      type: object
      properties:
        issuerAmountSettlementCurrency:
          type: integer
          description: Transaction amount converted to cardholders currency.
          format: int64
          example: 12000
        issuerCurrencyCode:
          type: string
          description: Currency code that defines the currency type, the country of origin, and the implied decimal point location for the related amount of the transaction.
          example: USD
        issuerCurrencyExponent:
          type: integer
          description: CardHolder billing currency exponent.
          format: int32
          example: 2
        settlementCurrencyCode:
          type: string
          description: Issuer settlement currency code.
          example: USD
        settlementCurrencyExponent:
          type: integer
          description: Issuer settlement currency exponent.
          format: int32
          example: 2
        transactionAmountSettlementCurrency:
          type: integer
          description: Issuer settlement currency.
          format: int64
          example: 12000
        transactionAmountTransactionCurrency:
          type: integer
          description: The entire amount of a particular transaction.
          format: int64
          example: 12000
        transactionCurrencyCode:
          type: string
          description: Currency code that defines the currency type, the country of origin, and the implied decimal point location for the related amount of the transaction.
          example: USD
        transactionCurrencyExponent:
          type: integer
          description: Currency exponent for transaction amount.
          format: int32
          example: 2
    MerchantDto:
      type: object
      properties:
        acquirerIca:
          type: string
          description: Merchant acquirer Ica for the transaction.
          example: 12345
        aggregateMerchantId:
          type: string
          description: The aggregate merchant ID of the merchant location matched to the transaction (or as assigned based on scrubbed transaction data if no location was matched and aggregate merchant assignment was requested). 99999 if not assigned.
          example: '985'
        city:
          type: string
          description: City of the merchant.
          example: BULGAKOVO
        country:
          type: string
          description: Merchant country code of the transaction.
          example: USA
        countryCode:
          type: string
          description: Country code of the merchant.
          example: 'USA'
        crossBorder:
          type: boolean
          description: Identifies whether the transaction is a cross-border transaction.
          example: true
        dbaName:
          type: string
          description: DBA name of merchant.
          example: AAA
        locationId:
          type: string
          description: Location ID of the merchant location matched to the transaction. If no location can be determined the value 999999999 will be assigned.
          example: '624103356'
        mccClassificationCode:
          type: string
          description: Mastercard defined classification of Merchant Category Code.
          example: 4K
        mccGroup:
          type: string
          description: MCC Group
          example: '78'
        merchantCategoryCode:
          type: string
          description: Identifies the merchants primary business.
          example: '5311'
        merchantId:
          type: string
          description: Acquirer Merchant ID as defined by merchant processing for the transaction.
          example: '6442456804'
        name:
          type: string
          description: Merchant name of the transaction
          example: AAA
        postalCode:
          type: string
          description: Postal code of the merchant.
          example: '81801'
        region:
          type: string
          description: Region code of the merchant location matched to the transaction (or the business region code of the scrubbed country code if no location was matched). If the scrubbed country code is unknown (XXX), a value of 99 is assigned.
          example: '5'
        shortDbaName:
          type: string
          description: The short DBA name derived from the scrubbed merchant DBA name for the transaction.
          example: OOOTERMSERV
        state:
          type: string
          description: The state/province code of the merchant location matched to the transaction (or the scrubbed state/province code of the transaction if no location was matched. This will be spaces except for USA, CAN, and AUS. If the state/province code cannot be determined, values of 'XX', 'XP' or 'UNK" will be assigned for USA, CAN and AUS respectively.
          example: MO
        storeDivision:
          type: string
          description: Merchant store division.
          example: '30078'
        storeNumber:
          type: string
          description: Merchant store number.
          example: '20002'
        streetAddress:
          type: string
          description: Street address of the merchant.
          example: 'B-N M-N AEROPORT STR BLD PAR'
    TransactionScoreDto:
      type: object
      properties:
        pointType:
          type: string
          description: Specifies the point type which is either Base Points or Bonus Points.
          example: BONUS
        promotionId:
          type: string
          description: Unique promotion identifier.
          example: '2aee0729-3a1a-451a-affa-84f3a6bc5acc'
        promotionName:
          type: string
          description: Name of the promotion.
          example: Rewards Promo
        rawScore:
          type: string
          description: Raw score (pre-capped score).
          example: '120'
        reason:
          type: string
          description: Reason code if there is any change in pre-capping or threshold score.
          example: cap
        rewardType:
          type: string
          description: Specifies the reward type which is either Points or Rebate.
          example: 'CASHBACK'
        score:
          type: string
          description: Final Score after capping.
          example: '100'
        postingAccountReferenceId:
          type: string
          description: Posting Account ReferenceId
          example: '751678c0-079b-11eb-adc1-0242ac12aaaa'
    GetTransactionDto:
      type: object
      properties:
        accountInfo:
          type: boolean
          description: Indicates if an account number is present.
          example: 'true'
        accountNumber:
          type: string
          description: Unique account identifier defined and provided by the client.
          example: '**8345'
        acquirerCountryCode:
          type: string
          description: Identifies the geographic country of the Acquirer.
          example: USA
        acquirerId:
          type: string
          description: Acquiring Institution ID Code identifies a transaction acquirer.
          example: '5037'
        acquirerReferenceNumber:
          type: string
          description: Acquirer Reference Number.
          example: '3080528744'
        authCode:
          type: string
          description: Auth Code
          example: '050913'
        cardDataInputModeCode:
          type: string
          description: Indicates the method used for entry to initiate a transaction (example:0,1,2,C,M,R,7,6,B,S,T,B,A,C,F).
          example: 'M'
        cardHolderPresentCode:
          type: string
          description: Indicates whether the cardholder is present at the point of service and explains the condition if the cardholder is not present (example:0,1).
          example: '0'
        cardPresentCode:
          type: string
          description: Indicates if the card is present at the point of service (example:0,1).
          example: '1'
        clientTransactionCode:
          type: string
          description: Client Transaction Code
          example: DVWPO
        companyIca:
          type: string
          description: Company Ica
          example: '611532'
        companyId:
          type: string
          description: Company Id
          example: 4K
        companyPromotionField:
          type: string
          description: Company Promotion Field
          example: '72882990'
        currency:
          $ref: '#/components/schemas/CurrencyDto'
        debitSwitch:
          type: string
          description: Debit Switch
          example: N
        exceptionId:
          type: string
          description: Exception Id
          example: '208058744'
        interchangeRateDesignator:
          type: string
          description: Interchange rate designator for the transaction.
          example: 2A
        issuerCountryCode:
          type: string
          description: Identifies the geographic country of the Issuer.
          example: USA
        issuerId:
          type: string
          description: Unique identifier of Issuer.
          example: '10455'
        issuerRegion:
          type: string
          description: Identifies the region of the Issuer.
          example: '05'
        itemCode:
          type: string
          description: Unique code number for item in transaction.
          example: Orbit
        itemDescription:
          type: string
          description: Description of item in transaction.
          example: Sony Walkman
        itemSku:
          type: string
          description: Unique SKU number associated with item in transaction.
          example: '21043332'
        merchant:
          $ref: '#/components/schemas/MerchantDto'
        offerType:
          type: string
          description: Offer Type
          example: '00101'
        productCode:
          type: string
          description: Product code of the transaction.
          example: MCB
        productLine:
          type: string
          description: Product Line
          example: '30003'
        rewardPostingDateTime:
          type: string
          description: Date when the transaction posted.
          example: 2020-01-12T05:00:00+0000
        routeNumber:
          type: string
          description: Route Number
          example: '29920212'
        sellingChannel:
          type: string
          description: Selling Channel
          example: '2524635'
        sequenceNumber:
          type: string
          description: Unique sequence number.
          example: '10000124564'
        tokenRequestorId:
          type: string
          description: The TRID uniquely identifies a token requestor (such as a Wallet Provider) that’s leveraging MDES for tokenized transactions.
          example: '50139059239'
        transactionAmount:
          type: integer
          description: Indicates the amount of the transaction.
          format: int64
          example: 12000
        transactionAmountFormatted:
          type: string
          description: Formatted transaction amount.
          example: $120.00
        transactionDateTime:
          type: string
          description: Date and time of the transaction.
          example: 2020-01-12T05:00:00+0000
        transactionId:
          type: string
          description: Unique transaction identifier.
          example: 'f66e7af3-3a09-451a-9331-e0baa8f97acd'
        transactionScores:
          type: array
          description: Transaction Scores
          items:
            $ref: '#/components/schemas/TransactionScoreDto'
        transactionSourceCode:
          type: string
          description: Source of Transaction (example:GCMS).
          example: GCMS
        transactionType:
          type: string
          description: Unique transaction type code in Data Warehouse; maps to DE3s1 value.
          example: 5
        walletProgramCode:
          type: string
          description: Provides information about how transactions initiated through the user of a digital wallet.
          example: '146'
    PromotionProgressList:
      type: object
      properties:
        promotionProgresses:
          type: array
          description: List of PromotionProgress
          items:
            $ref: '#/components/schemas/PromotionProgress'
    PromotionProgress:
      type: object
      properties:
        promotionId:
          type: string
          example: 2aee0729-3a1a-451a-affa-84f3a6bc5acc
          maxLength: 50
          description: Unique Identifier for the promotion for which reward progress is retrieved.
        programId:
          type: string
          example: f06b850a-1943-420a-bb15-c8de8f101d5e
          maxLength: 50
          description:  Unique Program Id for the business partner program to which this promotion belongs to.
        active:
          type: boolean
          example: TRUE
          description: Indicates whether this promotion is currently active (true) or inactive (false). Promotion end date should be after current date.
        progresses:
          type: array
          description: List of ProgressSummary
          items:
            $ref: '#/components/schemas/ProgressSummary'
        rules:
          type: array
          description: List of rules/threshold
          items:
            $ref: '#/components/schemas/Rule'
        caps:
          type: array
          description: List of Caps
          items:
            $ref: '#/components/schemas/Cap'
    ProgressSummary:
      type: object
      properties:
        entityType:
          type: string
          example: HOUSEHOLD
          maxLength: 15
          description: Unique Household identifier assigned by Mastercard and provided during the account enrollment and household creation process. <br/> or <br/> Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
        entityId:
          type: string
          example: ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8
          maxLength: 50
          description: Unique identifier for the progress entity type - “ACCOUNT” or “HOUSEHOLD”.
        totalRewardsReceived:
          type: integer
          example: 5
          maxLength: 15
          description: Total rewards (points, miles, rebate amount) received for this promotion.
        rewardsCurrencyCode:
          type: string
          example: USD
          maxLength: 5
          description: ISO currency code for the promotion award currency selected by the client during the Promotion Setup. Ex. US Dollar ISO code is USD.
    Rule:
      type: object
      properties:
        entityType:
          type: string
          example: HOUSEHOLD
          maxLength: 15
          description: Indicates level at which the promotion rule is applied. “ACCOUNT” or “HOUSEHOLD”.
        entityId:
          type: string
          example: ad1e21a7-4c1c-4812-ae47-d2c4fae7c5a8
          maxLength: 50
          description: Unique identifier for the rules entity type - “ACCOUNT” or “HOUSEHOLD”.
        ruleId:
          type: string
          example: da06a951-0237-4f32-affb-16502ae7dc9a
          maxLength: 50
          description: Rule Id is a unique identifier for the promotion rule.
        ruleThreshold:
          type: integer
          example: 5
          maxLength: 15
          description: This is the minimum amount of cumulative spend or count of transactions that needs to be met in order to receive reward.
          format: int64
        ruleType:
          type: string
          example: COUNT
          maxLength: 10
          description: Threshold Type for ruleValue and ruleThreshold. <br/> COUNT = Cumulative number of times a qualifying transaction or behavior needs to be made in order to receive a reward <br/> SPEND = Cumulative amount of spend across qualifying transactions that needs to be made in order to receive a reward
        ruleValue:
          type: integer
          example: 4
          maxLength: 15
          description: The account’s progress towards a rule threshold. A threshold could be the cumulative spend or count of transactions made.
          format: int64
        rulePeriod:
          type: string
          example: M
          maxLength: 10
          description: Period for which promotion rule is applied – “MONTH”, “YEAR”, “LIFETIME”.
        rulePeriodValue:
          type: string
          example: "202108"
          maxLength: 15
          description: Period value corresponding to rule Period - "YYYYMM” when rulePeriod is “MONTH”.
        ruleCurrencyCode:
          type: string
          example: USD
          maxLength: 5
          description: ISO currency code for threshold Rules configured for the given Promotion. Ex. US Dollar ISO code is USD.
    Account:
      type: object
      properties:
        accountId:
          type: string
          description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
          example: "Gd3pnH3bQh"
        activation:
          type: boolean
          description: Specifies if the account is opted-in or out for this promotion.
          example: true
        activationDateTime:
          type: string
          description: Specifies the date when user has optedin or opted out of a promotion.
          example: "2020-06-04T15:19:31.827Z"
    Promotion:
      type: object
      properties:
        accounts:
          type: array
          description: List of Accounts
          items:
            $ref: "#/components/schemas/Account"
        activationRequired:
          type: boolean
          example: true
          description: Specifies if a promotion is enabled for Opt-In/Opt-Out.<br/>
            true = Opt-in/out enabled<br/>
            false = Opt-in/out not enabled, account is opted into promotion by default if targeted.
        targetingEnabled:
          type: boolean
          example: false
          description: Specifies if a promotion is enabled for targetting.<br/>
            true = Targetting enabled, account has to be targetted for transactions to qualify <br/>
            false = Targetting not enabled, all accounts are eligible into promotion by default.
        beginDateTime:
          type: string
          description: Promotion start date.
          example: "2020-05-05T15:19:31.823Z"
        description:
          type: string
          description: Promotion description.
          example: "Promotion for digital rewards"
        endDateTime:
          type: string
          description: Promotion end date.
          example: "2020-07-05T15:19:31.827Z"
        name:
          type: string
          description: Promotion name.
          example: "Digital Rewards"
        programId:
          type: string
          description: Unique program identifier.
          example: "aae5ce99-58d1-47f4-8b6a-43b427be9d74"
        promotionId:
          type: string
          description: Unique promotion identifier.
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
        timeZoneId:
          type: string
          description: Time zone of a promotion.
          example: "America/Chicago"
        statusCode:
          type: string
          description: Promotion status.
          example: "ACTIVE"
        statusChangedDateTime:
          type: string
          description: The time when the status was updated.
          example: "2020-06-05T15:19:31.827Z"
    OptIn:
      type: object
      properties:
        accountId:
          type: string
          description: Unique Account identifier assigned by Mastercard and provided in the Account enrollment response.
          example: "Gd3pnH3bQh"
        activation:
          type: boolean
          description: Specifies if the consumer is opting in or opting out of a promotion.<br/>
            true = Opt-In<br/>
            false = Opt-Out
          example: true
        promotionId:
          type: string
          description: The unique identifier of the Promotion.
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
    Promotions:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 1
          description: The number of items that are in this offset batch
        offset:
          type: integer
          format: int32
          example: 1
          description: The number of items to offset the start of the list from
        limit:
          type: integer
          format: int32
          example: 25
          description: The number of items in the list to be limited to
        total:
          type: integer
          format: int64
          example: 1
          description: The total number of items that are in the entire collection
        items:
          type: array
          description: List of Promotions
          items:
            $ref: "#/components/schemas/Promotion"
    PromotionDetail:
      type: object
      properties:
        caps:
          type: array
          description: List of Caps applied to the Promotion
          items:
            $ref: '#/components/schemas/PromotionCap'
        promotionId:
          type: string
          description: Unique promotion identifier
          example: "de0e1456-e678-4270-b027-fc9950b8aba5"
        rewardConfig:
          type: object
          description: Rewards information
          properties:
            promotionId:
              type: string
              description: Unique promotion identifier
              example: "de0e1456-e678-4270-b027-fc9950b8aba5"
            referenceId:
              type: string
              description: Unique reward config identifier
              example: "de89f43c-8fbe-45ae-b5d2-ab965ecaa956"
            rebateText:
              type: string
              description: Specifies the text that shows up on cardholders billing statement for a purchase (Only applicable for a rebate)
              example: "REBATE"
            negativeRebateText:
              type: string
              description: Specifies the text that shows up on cardholders billing statement for a return (Only applicable for a rebate)
              example: "RETURN"
            rewardType:
              type: string
              description: Specifies the type of reward.<br/>
                CASHBACK - Cashback<br/>
                POINTS - Points
              example: "CASHBACK"
            pointType:
              type: string
              description: Specifies how the points are awarded (Only applicable is rewardType is POINTS).<br/>
                BASE_POINTS - Base points<br/>
                BONUS_POINTS - Bonus points
              example: "BASE_POINTS"
            awardType:
              type: string
              description: Specifies if the award is going to be a fixed amount or if its going to be based on transaction amount.<br/>
                FIXED - Fixed amount<br/>
                PERCENTAGE - Percentage of transaction amount
              example: "FIXED"
            applyAwardTo:
              type: string
              description: Specifies if the award is applied to trasacting account or the household primary account.<br/>
                TRANSACTING_ACCOUNT - Transacting account<br/>
                PRIMARY_ACCOUNT - Household primary account
              example: "TRANSACTING_ACCOUNT"
            scoreBasedOn:
              type: string
              description: Specifies how the transactions are scored.<br/>
                DE4_TRANSACTION_AMOUNT - Transaction amount<br/>
                DE5_SETTLEMENT_AMOUNT - Settlement amount<br/>
                DE6_CARDHOLDER_BILLING_AMOUNT - Cardholder billing amount
              example: "DE4_TRANSACTION_AMOUNT"
            rewardRate:
              type: string
              description: If the awardType is FIXED, this field specifies the amount that is awarded. And if the awardType is not fixed then it specifies the percentage of transaction amount
              example: "10"
        thresholds:
          type: array
          description: List of Thresholds applied to the Promotion
          items:
            $ref: '#/components/schemas/PromotionThreshold'
    PromotionThreshold:
      type: object
      properties:
        id:
          type: string
          description: Unique threshold identifier
          example: "fbbbba72-141d-41f5-9ace-69129f971010"
        type:
          type: string
          description: Specifies if the threshold is based on transaction count or transaction spend amount.<br/>
            COUNT - Transaction count<br/>
            SPEND - Transaction spend amount
          example: "AMOUNT"
        fieldType:
          type: string
          description: If the type selected is SPEND, then this field specifies which amount value is used to accumulate toward the threshold.<br/>
            DE04 - Transaction Amount<br/>
            DE06 - Cardholder Billing Amount
          example: "DE04"
        value:
          type: number
          format: double
          description: The spend amount or the count that must be reached before the award is given
          example: 1000.00
        level:
          type: string
          description: Specifies the level at which the threshold is applied.<br/>
            A - Account level (All accounts have their own threshold)<br/>
            H - Household level (Each account contributes toward reaching the threshold)
          example: "A"
        periodInDaysAfterDate:
          type: integer
          format: int32
          description: Number of days the cardholder has to meet the threshold before its expired
          example: 10
        dateFieldType:
          type: string
          description: Specifies the date type used for starting the count on how long the account has for meeting the threshold.<br/>
            ENROLLMENT_DATE - The date on which the cardholder has enrolled to the program<br/>
            TARGET_BEGIN_DATE - The date on which the account is set to be targetted into a promotion<br/>
            ACTIVE_DATE - The date on which enrollment record was added to the system<br/>
            OPTIN_DATE - The date on which the account has opted into the promotion<br/>
          example: "ENROLLMENT_DATE"
    PromotionCap:
      type: object
      properties:
        amount:
          type: number
          format: double
          description: Specifies the cap amount
          example: 1000.00
        enabled:
          type: boolean
          description: Indicates if capping is enabled for the promotion
          example: TRUE
        id:
          type: string
          description: Unique cap identifier
          example: "59266873-45c9-418f-a9dc-1b0f00d0bc16"
        level:
          type: string
          description: Specifies the level at which cap is applied.<br/>
            A - Account level<br/>
            P - Household level<br/>
            T - Transaction level
          example: "A"
        period:
          type: string
          description: Specifies the period for which cap is applied.<br/>
            M - Monthly<br/>
            Y - Yearly<br/>
            L - Lifetime
          example: "M"
    PagedResponseOfAccountSearch:
      type: object
      properties:
        count:
          type: integer
          description: The number of items that are in this offset batch
          format: int32
          example: 1
        offset:
          type: integer
          description: The number of items to offset the start of the list from
          format: int32
          example: 0
        limit:
          type: integer
          description: The number of items in the list to be limited to
          format: int32
          example: 25
        total:
          type: integer
          description: The total number of items that are in the entire collection
          format: int64
          example: 1
        items:
          minItems: 0
          type: array
          description: The list of Accounts that are in the entire collection
          items:
            $ref: '#/components/schemas/AccountSearchItem'
  examples:
    SearchAccountBadRequest:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: MISSING_REQUIRED_FIELD_ACCOUNT_NUMBER
              Description: Account Number is required.
              Recoverable: false
              Details: null
    Unauthorized:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: AUTHORIZATION_ERROR
              Description: Client could not be authorized.
              Recoverable: true
              Details: null
    Forbidden:
      value:
        Errors:
          Error:
            - Source: Loyalty-Enrollment
              ReasonCode: FORBIDDEN
              Description: Client does not have permission.
              Recoverable: true
              Details: null